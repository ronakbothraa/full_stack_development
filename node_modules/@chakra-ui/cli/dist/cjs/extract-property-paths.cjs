'use strict';

var isObject = require('./utils/is-object.cjs');
var printUnionType = require('./utils/print-union-type.cjs');

function printUnionMap(unions, strict = false) {
  return Object.entries(unions).sort(([a], [b]) => a.localeCompare(b)).map(([targetKey, union]) => {
    const isStrict = typeof strict === "function" ? strict(targetKey) : strict;
    return `${targetKey}: ${printUnionType.printUnionType(union, isStrict)};`;
  }).join("\n");
}
function extractPropertyPaths(target, maxDepth = 3) {
  if (!isObject.isObject(target) && !Array.isArray(target) || !maxDepth) {
    return [];
  }
  return Object.entries(target).reduce((allPropertyPaths, [key, value]) => {
    if (isObject.isObject(value)) {
      extractPropertyPaths(value, maxDepth - 1).forEach(
        (childKey) => (
          // e.g. gray.500
          allPropertyPaths.push(`${key}.${childKey}`)
        )
      );
    } else {
      allPropertyPaths.push(key);
    }
    return allPropertyPaths;
  }, []);
}

exports.extractPropertyPaths = extractPropertyPaths;
exports.printUnionMap = printUnionMap;
