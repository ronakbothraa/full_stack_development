'use strict';

var isObject = require('./utils/is-object.cjs');
var extractPropertyPaths = require('./extract-property-paths.cjs');

function extractComponentTypes(theme) {
  const components = theme.components;
  if (!isObject.isObject(components)) {
    return {};
  }
  return Object.entries(components).reduce(
    (allDefs, [componentName, definition]) => {
      if (definition) {
        allDefs[componentName] = {
          sizes: Object.keys(definition.sizes ?? {}),
          variants: Object.keys(definition.variants ?? {})
        };
      }
      return allDefs;
    },
    {}
  );
}
function esc(name) {
  return name.match(/^[a-zA-Z0-9\-_]+$/) ? name : `"${name}"`;
}
function printComponentTypes(componentTypes, strict = false) {
  const types = Object.entries(componentTypes).map(
    ([componentName, unions]) => `${esc(componentName)}: {
  ${extractPropertyPaths.printUnionMap(unions, strict)}
}`
  ).join(`
`);
  return `components: {
  ${types}  
}
`;
}

exports.extractComponentTypes = extractComponentTypes;
exports.printComponentTypes = printComponentTypes;
